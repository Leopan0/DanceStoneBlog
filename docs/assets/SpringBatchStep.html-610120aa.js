const e=JSON.parse('{"key":"v-13c47df8","path":"/zh/%E5%90%8E%E7%AB%AF/Java/SpringBatch/SpringBatchStep.html","title":"Spring Batch——Step控制","lang":"zh-CN","frontmatter":{"title":"Spring Batch——Step控制","date":"2021-10-19T00:00:00.000Z","tag":["Spring Batch","Java"],"category":["Java"],"order":2,"description":"Spring Batch——Step控制 ​\\t\\t批处理任务的主要业务逻辑都是在Step中去完成的。可以将Job理解为运行Step的框架，而Step理解为业务功能。 Step配置 ​\\t\\tStep是Job中的工作单元，每一个Step涵盖了单行记录的处理闭环。下图是一个Step的简要结构： ​\\t\\t一个Step通常涵盖三个部分：读数据（Reader）、处理数据（Processor）和写数据（Writer）。但是并不是所有的Step 都需要自身来完成数据的处理，比如存储过程等方式是通过外部功能来完成，因此Spring Batch提供了2种Step的处理方式：1）面向分片的ChunkStep，2）面向过程的TaskletStep。但是基本上大部分情况下都是使用面向分片的方式来解决问题。","head":[["meta",{"property":"og:url","content":"https://github.com/Leopan0/DanceStoneBlog/zh/%E5%90%8E%E7%AB%AF/Java/SpringBatch/SpringBatchStep.html"}],["meta",{"property":"og:site_name","content":"会跳舞的石头"}],["meta",{"property":"og:title","content":"Spring Batch——Step控制"}],["meta",{"property":"og:description","content":"Spring Batch——Step控制 ​\\t\\t批处理任务的主要业务逻辑都是在Step中去完成的。可以将Job理解为运行Step的框架，而Step理解为业务功能。 Step配置 ​\\t\\tStep是Job中的工作单元，每一个Step涵盖了单行记录的处理闭环。下图是一个Step的简要结构： ​\\t\\t一个Step通常涵盖三个部分：读数据（Reader）、处理数据（Processor）和写数据（Writer）。但是并不是所有的Step 都需要自身来完成数据的处理，比如存储过程等方式是通过外部功能来完成，因此Spring Batch提供了2种Step的处理方式：1）面向分片的ChunkStep，2）面向过程的TaskletStep。但是基本上大部分情况下都是使用面向分片的方式来解决问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-06T07:11:38.000Z"}],["meta",{"property":"article:author","content":"会跳舞的石头"}],["meta",{"property":"article:tag","content":"Spring Batch"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-10-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-06T07:11:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Batch——Step控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-06T07:11:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会跳舞的石头\\",\\"url\\":\\"https://github.com/Leopan0/DanceStoneBlog\\"}]}"]]},"headers":[{"level":2,"title":"Spring Batch——Step控制","slug":"spring-batch——step控制","link":"#spring-batch——step控制","children":[{"level":3,"title":"Step配置","slug":"step配置","link":"#step配置","children":[]},{"level":3,"title":"面向分片的处理过程","slug":"面向分片的处理过程","link":"#面向分片的处理过程","children":[]},{"level":3,"title":"分区","slug":"分区","link":"#分区","children":[]},{"level":3,"title":"面向对象配置Step","slug":"面向对象配置step","link":"#面向对象配置step","children":[]},{"level":3,"title":"提交间隔","slug":"提交间隔","link":"#提交间隔","children":[]},{"level":3,"title":"配置Step重启","slug":"配置step重启","link":"#配置step重启","children":[]},{"level":3,"title":"配置略过逻辑","slug":"配置略过逻辑","link":"#配置略过逻辑","children":[]},{"level":3,"title":"设置重试逻辑","slug":"设置重试逻辑","link":"#设置重试逻辑","children":[]},{"level":3,"title":"Step 中的事务","slug":"step-中的事务","link":"#step-中的事务","children":[]},{"level":3,"title":"向Step注册 ItemStream","slug":"向step注册-itemstream","link":"#向step注册-itemstream","children":[]},{"level":3,"title":"StepExecution拦截器","slug":"stepexecution拦截器","link":"#stepexecution拦截器","children":[]},{"level":3,"title":"TaskletStep","slug":"taskletstep","link":"#taskletstep","children":[]},{"level":3,"title":"控制Step执行流程","slug":"控制step执行流程","link":"#控制step执行流程","children":[]}]}],"git":{"createdTime":1686035498000,"updatedTime":1686035498000,"contributors":[{"name":"Leopan0","email":"33919622+Leopan0@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":18.78,"words":5634},"filePathRelative":"zh/后端/Java/SpringBatch/SpringBatchStep.md","localizedDate":"2021年10月19日","excerpt":"<h2> Spring Batch——Step控制</h2>\\n<p>​\\t\\t批处理任务的主要业务逻辑都是在<code>Step</code>中去完成的。可以将<code>Job</code>理解为运行<code>Step</code>的框架，而<code>Step</code>理解为业务功能。</p>\\n<h3> Step配置</h3>\\n<p>​\\t\\t<code>Step</code>是<code>Job</code>中的工作单元，每一个<code>Step</code>涵盖了单行记录的处理闭环。下图是一个<code>Step</code>的简要结构：</p>\\n<p></p>\\n<p>​\\t\\t一个<code>Step</code>通常涵盖三个部分：读数据（Reader）、处理数据（Processor）和写数据（Writer）。但是并不是所有的<code>Step</code> 都需要自身来完成数据的处理，比如存储过程等方式是通过外部功能来完成，因此Spring Batch提供了2种Step的处理方式：1）面向分片的<code>ChunkStep</code>，2）面向过程的<code>TaskletStep</code>。但是基本上大部分情况下都是使用面向分片的方式来解决问题。</p>","copyright":{"author":"会跳舞的石头"},"autoDesc":true}');export{e as data};
