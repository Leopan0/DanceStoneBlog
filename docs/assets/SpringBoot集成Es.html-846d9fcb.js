import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as o,a as n,b as a,d as t,f as l}from"./app-694d939e.js";const i={},u=l(`<h1 id="spring-boot-集成es" tabindex="-1"><a class="header-anchor" href="#spring-boot-集成es" aria-hidden="true">#</a> Spring Boot 集成Es</h1><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h2><p>这是引入Maven示例</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中第二个依赖是es的访问客户端，es有两种方的 Client：<code>Java Low Level Client</code> 和 <code>Java High Level REST Client</code>。</p><p>低级别客户端，它允许通过 HTTP 请求与 ES 集群进行通信，API 本身不负责数据的编码解码，由用户去编码解码，它与所有的 ES 版本兼容。</p><p>高级客户端基于低级客户端，是从 6.0 才开始加入的，主要目标是为了暴露各 API 特定的方法，高版本客户端依赖于 ES 核心项目，将 Request 对象作为参数，返回一个 Response 对象，所有 API 都可以同步或异步调用。</p><p>更推荐高级客户端</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>Java配置部分</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configurable</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ElasticsearchConfiguration</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">EsConfig</span> esConfig<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 配置客户端
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>destroyMethod <span class="token operator">=</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;client&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">RestHighLevelClient</span> <span class="token function">initRestClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RestClientBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span>esConfig<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>esConfig<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setRequestConfigCallback</span><span class="token punctuation">(</span>requestConfigBuilder <span class="token operator">-&gt;</span> requestConfigBuilder
                        <span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span>esConfig<span class="token punctuation">.</span><span class="token function">getConnTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>esConfig<span class="token punctuation">.</span><span class="token function">getSocketTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span>esConfig<span class="token punctuation">.</span><span class="token function">getConnectionRequestTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件配置</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># ip和端口</span>
<span class="token key attr-name">elasticsearch.host</span><span class="token punctuation">=</span><span class="token value attr-value">localhost</span>
<span class="token key attr-name">elasticsearch.port</span><span class="token punctuation">=</span><span class="token value attr-value">9200</span>
<span class="token comment"># 连接超时</span>
<span class="token key attr-name">elasticsearch.connTimeout</span><span class="token punctuation">=</span><span class="token value attr-value">3000</span>
<span class="token key attr-name">elasticsearch.socketTimeout</span><span class="token punctuation">=</span><span class="token value attr-value">5000</span>
<span class="token comment"># 请求超时</span>
<span class="token key attr-name">elasticsearch.connectionRequestTimeout</span><span class="token punctuation">=</span><span class="token value attr-value">500</span>
<span class="token comment"># username和password如果没有开启安全管理，可以不用配置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>配置文件部分可以考虑做动态配置</p></blockquote><h2 id="spring-data-方式接入" tabindex="-1"><a class="header-anchor" href="#spring-data-方式接入" aria-hidden="true">#</a> Spring Data 方式接入</h2><p>Spring Data系列方便我们接入各种SQL 和 NoSQL专注业务代码实现</p><p>依赖我们只需要引入这个即可</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置也很简单</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring</span><span class="token punctuation">:</span>
<span class="token key attr-name">     elasticsearch</span><span class="token punctuation">:</span>
<span class="token key attr-name">        rest</span><span class="token punctuation">:</span>
<span class="token key attr-name">          uris</span><span class="token punctuation">:</span> <span class="token value attr-value">http://192.168.100.101:9200</span>
<span class="token key attr-name">          username</span><span class="token punctuation">:</span> <span class="token value attr-value">elasticsearch</span>
<span class="token key attr-name">          password</span><span class="token punctuation">:</span> <span class="token value attr-value">elasticsearch</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就搞定了</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,22),r={href:"https://zhuanlan.zhihu.com/p/159138736",target:"_blank",rel:"noopener noreferrer"},k={href:"https://es.chaosopen.cn/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/gybshen/article/details/111469217",target:"_blank",rel:"noopener noreferrer"};function v(g,m){const s=p("ExternalLinkIcon");return c(),o("div",null,[u,n("p",null,[n("a",r,[a("Spring Boot 集成 Elasticsearch 实战 - 知乎 (zhihu.com)"),t(s)])]),n("p",null,[n("a",k,[a("ElasticSearch 从入门到实战 | 《ElasticSearch入门到实战》电子书 (chaosopen.cn)"),t(s)])]),n("p",null,[n("a",d,[a("Spring Boot整合Elasticsearch，最新最全教程_springboot elasticsearch-CSDN博客"),t(s)])])])}const f=e(i,[["render",v],["__file","SpringBoot集成Es.html.vue"]]);export{f as default};
