const t=JSON.parse('{"key":"v-7a1fd571","path":"/zh/%E5%90%8E%E7%AB%AF/Java/SpringBatch/SpringBatchJob.html","title":"Spring Batch——Job配置与运行","lang":"zh-CN","frontmatter":{"title":"Spring Batch——Job配置与运行","date":"2021-10-19T00:00:00.000Z","tag":["Spring Batch","Java"],"category":["Java"],"order":3,"description":"Spring Batch——Job配置与运行 ​\\t\\t在上文中介绍了批处理的概念以及Spring Batch相关的使用场景，后续将会陆续说明在代码层面如何使用。 引入 ​\\t\\tSpring batch的引入非常简单，只需要引入Spring Framework、Datasource以及Spring Batch。在Spring Boot体系下只需引入spring-boot-starter-batch 即可。他已经涵盖了以上所有内容。 Job配置 Job接口有多种多样的实现类，通常我们使用configuration类来构建获取一个Job：","head":[["meta",{"property":"og:url","content":"https://github.com/Leopan0/zh/%E5%90%8E%E7%AB%AF/Java/SpringBatch/SpringBatchJob.html"}],["meta",{"property":"og:site_name","content":"会跳舞的石头"}],["meta",{"property":"og:title","content":"Spring Batch——Job配置与运行"}],["meta",{"property":"og:description","content":"Spring Batch——Job配置与运行 ​\\t\\t在上文中介绍了批处理的概念以及Spring Batch相关的使用场景，后续将会陆续说明在代码层面如何使用。 引入 ​\\t\\tSpring batch的引入非常简单，只需要引入Spring Framework、Datasource以及Spring Batch。在Spring Boot体系下只需引入spring-boot-starter-batch 即可。他已经涵盖了以上所有内容。 Job配置 Job接口有多种多样的实现类，通常我们使用configuration类来构建获取一个Job："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-06T07:11:38.000Z"}],["meta",{"property":"article:author","content":"会跳舞的石头"}],["meta",{"property":"article:tag","content":"Spring Batch"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-10-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-06T07:11:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Batch——Job配置与运行\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-06T07:11:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会跳舞的石头\\",\\"url\\":\\"https://github.com/Leopan0/DanceStoneBlog\\"}]}"]]},"headers":[{"level":2,"title":"Spring Batch——Job配置与运行","slug":"spring-batch——job配置与运行","link":"#spring-batch——job配置与运行","children":[{"level":3,"title":"引入","slug":"引入","link":"#引入","children":[]},{"level":3,"title":"Job配置","slug":"job配置","link":"#job配置","children":[]},{"level":3,"title":"JobRepository配置","slug":"jobrepository配置","link":"#jobrepository配置","children":[]},{"level":3,"title":"运行一个Job","slug":"运行一个job","link":"#运行一个job","children":[]}]}],"git":{"createdTime":1686035498000,"updatedTime":1686035498000,"contributors":[{"name":"Leopan0","email":"33919622+Leopan0@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.03,"words":1508},"filePathRelative":"zh/后端/Java/SpringBatch/SpringBatchJob.md","localizedDate":"2021年10月19日","excerpt":"<h2> Spring Batch——Job配置与运行</h2>\\n<p>​\\t\\t在上文中介绍了批处理的概念以及Spring Batch相关的使用场景，后续将会陆续说明在代码层面如何使用。</p>\\n<h3> 引入</h3>\\n<p>​\\t\\tSpring batch的引入非常简单，只需要引入Spring Framework、Datasource以及Spring Batch。在Spring Boot体系下只需引入<code>spring-boot-starter-batch</code> 即可。他已经涵盖了以上所有内容。</p>\\n<h3> Job配置</h3>\\n<p><code>Job</code>接口有多种多样的实现类，通常我们使用configuration类来构建获取一个<code>Job</code>：</p>","copyright":{"author":"会跳舞的石头"},"autoDesc":true}');export{t as data};
