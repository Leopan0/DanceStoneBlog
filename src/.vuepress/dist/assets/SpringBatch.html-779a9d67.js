const t=JSON.parse('{"key":"v-05a3fa38","path":"/zh/%E5%90%8E%E7%AB%AF/Java/SpringBatch/SpringBatch.html","title":"Spring Batch Java 批处理框架","lang":"zh-CN","frontmatter":{"title":"Spring Batch Java 批处理框架","date":"2021-10-19T00:00:00.000Z","tag":["Spring Batch","Java"],"category":["Java"],"order":1,"isOriginal":false,"description":"Spring Batch Java 批处理框架 Spring Batch 概念 批处理的核心场景 从某个位置读取大量的记录，位置可以是数据库、文件或者外部推送队列（MQ）。 根据业务需要实时处理读取的数据。 将处理后的数据写入某个位置，可以第一条一样，可以是数据库、文件或者推送到队列。 Spring Batch能解决的批处理场景 ​\\t\\tSpring Batch为批处理提供了一个轻量化的解决方案，它根据批处理的需要迭代处理各种记录，提供事物功能。但是Spring Batch仅仅适用于\\"脱机\\"场景，在处理的过程中不能和外部进行任何交互，也不允许有任何输入。","head":[["meta",{"property":"og:url","content":"https://github.com/Leopan0/zh/%E5%90%8E%E7%AB%AF/Java/SpringBatch/SpringBatch.html"}],["meta",{"property":"og:site_name","content":"会跳舞的石头"}],["meta",{"property":"og:title","content":"Spring Batch Java 批处理框架"}],["meta",{"property":"og:description","content":"Spring Batch Java 批处理框架 Spring Batch 概念 批处理的核心场景 从某个位置读取大量的记录，位置可以是数据库、文件或者外部推送队列（MQ）。 根据业务需要实时处理读取的数据。 将处理后的数据写入某个位置，可以第一条一样，可以是数据库、文件或者推送到队列。 Spring Batch能解决的批处理场景 ​\\t\\tSpring Batch为批处理提供了一个轻量化的解决方案，它根据批处理的需要迭代处理各种记录，提供事物功能。但是Spring Batch仅仅适用于\\"脱机\\"场景，在处理的过程中不能和外部进行任何交互，也不允许有任何输入。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/Leopan0/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-06T07:11:38.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Spring Batch Java 批处理框架"}],["meta",{"property":"article:author","content":"会跳舞的石头"}],["meta",{"property":"article:tag","content":"Spring Batch"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-10-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-06T07:11:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Batch Java 批处理框架\\",\\"image\\":[\\"https://github.com/Leopan0/\\"],\\"datePublished\\":\\"2021-10-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-06T07:11:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"会跳舞的石头\\",\\"url\\":\\"https://github.com/Leopan0/DanceStoneBlog\\"}]}"]]},"headers":[{"level":2,"title":"Spring Batch 概念","slug":"spring-batch-概念","link":"#spring-batch-概念","children":[{"level":3,"title":"批处理的核心场景","slug":"批处理的核心场景","link":"#批处理的核心场景","children":[]},{"level":3,"title":"Spring Batch能解决的批处理场景","slug":"spring-batch能解决的批处理场景","link":"#spring-batch能解决的批处理场景","children":[]},{"level":3,"title":"Spring Batch的目标","slug":"spring-batch的目标","link":"#spring-batch的目标","children":[]},{"level":3,"title":"Spring Batch结构","slug":"spring-batch结构","link":"#spring-batch结构","children":[]},{"level":3,"title":"Spring Batch 批处理原则与建议","slug":"spring-batch-批处理原则与建议","link":"#spring-batch-批处理原则与建议","children":[]},{"level":3,"title":"批处理的通用策略","slug":"批处理的通用策略","link":"#批处理的通用策略","children":[]},{"level":3,"title":"数据额外处理","slug":"数据额外处理","link":"#数据额外处理","children":[]},{"level":3,"title":"常规数据源","slug":"常规数据源","link":"#常规数据源","children":[]},{"level":3,"title":"典型的处理过程","slug":"典型的处理过程","link":"#典型的处理过程","children":[]},{"level":3,"title":"Spring Batch批处理的核心概念","slug":"spring-batch批处理的核心概念","link":"#spring-batch批处理的核心概念","children":[]}]},{"level":2,"title":"Spring Batch——Step控制","slug":"spring-batch——step控制","link":"#spring-batch——step控制","children":[]},{"level":2,"title":"Spring Batch——Job配置与运行","slug":"spring-batch——job配置与运行","link":"#spring-batch——job配置与运行","children":[]},{"level":2,"title":"Spring Batch——Item概念及使用代码","slug":"spring-batch——item概念及使用代码","link":"#spring-batch——item概念及使用代码","children":[{"level":3,"title":"Reader","slug":"reader","link":"#reader","children":[]},{"level":3,"title":"Writer","slug":"writer","link":"#writer","children":[]},{"level":3,"title":"读写的组合模式","slug":"读写的组合模式","link":"#读写的组合模式","children":[]},{"level":3,"title":"Processor","slug":"processor","link":"#processor","children":[]},{"level":3,"title":"ItemStream","slug":"itemstream","link":"#itemstream","children":[]},{"level":3,"title":"持久化数据","slug":"持久化数据","link":"#持久化数据","children":[]}]},{"level":2,"title":"Spring Batch——文件读写","slug":"spring-batch——文件读写","link":"#spring-batch——文件读写","children":[{"level":3,"title":"扁平结构文件","slug":"扁平结构文件","link":"#扁平结构文件","children":[]},{"level":3,"title":"数据读取","slug":"数据读取","link":"#数据读取","children":[]},{"level":3,"title":"写入扁平结构文件","slug":"写入扁平结构文件","link":"#写入扁平结构文件","children":[]},{"level":3,"title":"代码说明","slug":"代码说明","link":"#代码说明","children":[]}]},{"level":2,"title":"Spring Batch——数据库批数据读写","slug":"spring-batch——数据库批数据读写","link":"#spring-batch——数据库批数据读写","children":[{"level":3,"title":"数据读取","slug":"数据读取-1","link":"#数据读取-1","children":[]},{"level":3,"title":"游标读取数据","slug":"游标读取数据","link":"#游标读取数据","children":[]},{"level":3,"title":"分页读取数据","slug":"分页读取数据","link":"#分页读取数据","children":[]},{"level":3,"title":"数据写入","slug":"数据写入","link":"#数据写入","children":[]},{"level":3,"title":"组合使用案例","slug":"组合使用案例","link":"#组合使用案例","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1686035498000,"updatedTime":1686035498000,"contributors":[{"name":"Leopan0","email":"33919622+Leopan0@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":43.49,"words":13048},"filePathRelative":"zh/后端/Java/SpringBatch/SpringBatch.md","localizedDate":"2021年10月19日","excerpt":"<h1> Spring Batch Java 批处理框架</h1>\\n<h2> Spring Batch 概念</h2>\\n<h3> 批处理的核心场景</h3>\\n<ul>\\n<li>从某个位置读取大量的记录，位置可以是数据库、文件或者外部推送队列（MQ）。</li>\\n<li>根据业务需要实时处理读取的数据。</li>\\n<li>将处理后的数据写入某个位置，可以第一条一样，可以是数据库、文件或者推送到队列。</li>\\n</ul>\\n<h3> Spring Batch能解决的批处理场景</h3>\\n<p>​\\t\\tSpring Batch为批处理提供了一个轻量化的解决方案，它根据批处理的需要迭代处理各种记录，提供事物功能。但是Spring Batch仅仅适用于\\"脱机\\"场景，在处理的过程中不能和外部进行任何交互，也不允许有任何输入。</p>","copyright":{"author":"会跳舞的石头"},"autoDesc":true}');export{t as data};
